name: Build Containers and Deploy

on:
  push:
    tags:
      - "v*"

permissions:
  packages: write
  contents: read

jobs:
  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        service: [backend, frontend]

    env:
      VITE_ENDPOINT: https://foodtoday.co

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Tag Name
        id: version
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Extract Pull Request SHA (Shortened)
        id: githash
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          SHORT_SHA=$(echo "${{ github.event.pull_request.head.sha }}" | cut -c1-7)
          echo "::set-output name=shortsha::$SHORT_SHA"

      - name: Build Docker Image
        run: |
          IMAGE_TAG="${{ steps.version.outputs.tag || steps.githash.outputs.shortsha }}"
          echo "Using image tag: $IMAGE_TAG"
          docker build \
            --build-arg VITE_ENDPOINT=${{ env.VITE_ENDPOINT }} \
            -t ghcr.io/${{ github.repository }}/${{ matrix.service }}:$IMAGE_TAG ./${{ matrix.service }}
          docker tag ghcr.io/${{ github.repository }}/${{ matrix.service }}:$IMAGE_TAG ghcr.io/${{ github.repository }}/${{ matrix.service }}:latest

      - name: Push Docker Image
        run: |
          IMAGE_TAG="${{ steps.version.outputs.tag || steps.githash.outputs.shortsha }}"
          docker push ghcr.io/${{ github.repository }}/${{ matrix.service }}:$IMAGE_TAG
          docker push ghcr.io/${{ github.repository }}/${{ matrix.service }}:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Application via SSH
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            echo "Running deployment"
            echo "- pulling latest Docker images"
            docker-compose pull backend frontend

            echo "- restarting services"
            docker-compose up -d backend frontend

            echo "- migrating database"
            sleep 5
            docker-compose exec backend npm run db:migrate

            echo "Deployment completed successfully!"
          EOF
